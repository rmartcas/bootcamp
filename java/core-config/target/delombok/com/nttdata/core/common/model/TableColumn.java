// Generated by delombok at Tue Jul 18 12:47:58 CEST 2023
/*******************************************************************************
 * Copyright (C) 2023 NTT DATA, All Rights Reserved
 *******************************************************************************/
package com.nttdata.core.common.model;

import java.io.Serializable;

/**
 * Entity to represent a table column in the front app
 * 
 * @see com.nttdata.core.common.service.Initializable#init(Page)
 * @see com.nttdata.core.common.service.Initializable#init(Core)
 * 
 * @author NTT DATA
 * @since 0.0.1
 */
public class TableColumn implements Serializable {
	/**
	 * serialVersionUID
	 */
	private static final long serialVersionUID = 1L;
	/**
	 * The name of the column.
	 */
	private String name;
	/**
	 * The bind property within the model.
	 */
	private String prop;
	/**
	 * The bind property within the model using for sorting.
	 */
	private String propertyOrder;
	/**
	 * The cell template defined in the front app to use.
	 */
	private String cellTemplate;
	/**
	 * Is the column hidden?.
	 */
	private boolean hidden;
	/**
	 * Is the column a handler for collapse or expand a tree table?.
	 */
	private boolean treeColumn;

	/**
	 * The name of the column.
	 * @return {@link String} the name
	 */
	@java.lang.SuppressWarnings("all")
	public String getName() {
		return this.name;
	}

	/**
	 * The bind property within the model.
	 * @return {@link String} the bind property model name
	 */
	@java.lang.SuppressWarnings("all")
	public String getProp() {
		return this.prop;
	}

	/**
	 * The bind property within the model using for sorting.
	 * @return {@link String} the property name
	 */
	@java.lang.SuppressWarnings("all")
	public String getPropertyOrder() {
		return this.propertyOrder;
	}

	/**
	 * The cell template defined in the front app to use.
	 * @return {@link String} the cell template
	 */
	@java.lang.SuppressWarnings("all")
	public String getCellTemplate() {
		return this.cellTemplate;
	}

	/**
	 * Is the column hidden?.
	 * @return {@link Boolean} the hidden state
	 */
	@java.lang.SuppressWarnings("all")
	public boolean isHidden() {
		return this.hidden;
	}

	/**
	 * Is the column a handler for collapse or expand a tree table?.
	 * @return {@link Boolean} the tree column state
	 */
	@java.lang.SuppressWarnings("all")
	public boolean isTreeColumn() {
		return this.treeColumn;
	}

	/**
	 * The name of the column.
	 * @param name {@link String} The name
	 */
	@java.lang.SuppressWarnings("all")
	public void setName(final String name) {
		this.name = name;
	}

	/**
	 * The bind property within the model.
	 * @param prop {@link String} The bind property model name
	 */
	@java.lang.SuppressWarnings("all")
	public void setProp(final String prop) {
		this.prop = prop;
	}

	/**
	 * The bind property within the model using for sorting.
	 * @param propertyOrder {@link String} The property name
	 */
	@java.lang.SuppressWarnings("all")
	public void setPropertyOrder(final String propertyOrder) {
		this.propertyOrder = propertyOrder;
	}

	/**
	 * The cell template defined in the front app to use.
	 * @param cellTemplate {@link String} The cell template
	 */
	@java.lang.SuppressWarnings("all")
	public void setCellTemplate(final String cellTemplate) {
		this.cellTemplate = cellTemplate;
	}

	/**
	 * Is the column hidden?.
	 * @param hidden {@link Boolean} The hidden state
	 */
	@java.lang.SuppressWarnings("all")
	public void setHidden(final boolean hidden) {
		this.hidden = hidden;
	}

	/**
	 * Is the column a handler for collapse or expand a tree table?.
	 * @param treeColumn {@link Boolean} The tree column state
	 */
	@java.lang.SuppressWarnings("all")
	public void setTreeColumn(final boolean treeColumn) {
		this.treeColumn = treeColumn;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof TableColumn)) return false;
		final TableColumn other = (TableColumn) o;
		if (!other.canEqual((java.lang.Object) this)) return false;
		if (this.isHidden() != other.isHidden()) return false;
		if (this.isTreeColumn() != other.isTreeColumn()) return false;
		final java.lang.Object this$name = this.getName();
		final java.lang.Object other$name = other.getName();
		if (this$name == null ? other$name != null : !this$name.equals(other$name)) return false;
		final java.lang.Object this$prop = this.getProp();
		final java.lang.Object other$prop = other.getProp();
		if (this$prop == null ? other$prop != null : !this$prop.equals(other$prop)) return false;
		final java.lang.Object this$propertyOrder = this.getPropertyOrder();
		final java.lang.Object other$propertyOrder = other.getPropertyOrder();
		if (this$propertyOrder == null ? other$propertyOrder != null : !this$propertyOrder.equals(other$propertyOrder)) return false;
		final java.lang.Object this$cellTemplate = this.getCellTemplate();
		final java.lang.Object other$cellTemplate = other.getCellTemplate();
		if (this$cellTemplate == null ? other$cellTemplate != null : !this$cellTemplate.equals(other$cellTemplate)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof TableColumn;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		result = result * PRIME + (this.isHidden() ? 79 : 97);
		result = result * PRIME + (this.isTreeColumn() ? 79 : 97);
		final java.lang.Object $name = this.getName();
		result = result * PRIME + ($name == null ? 43 : $name.hashCode());
		final java.lang.Object $prop = this.getProp();
		result = result * PRIME + ($prop == null ? 43 : $prop.hashCode());
		final java.lang.Object $propertyOrder = this.getPropertyOrder();
		result = result * PRIME + ($propertyOrder == null ? 43 : $propertyOrder.hashCode());
		final java.lang.Object $cellTemplate = this.getCellTemplate();
		result = result * PRIME + ($cellTemplate == null ? 43 : $cellTemplate.hashCode());
		return result;
	}

	@java.lang.SuppressWarnings("all")
	public TableColumn() {
	}
}
