// Generated by delombok at Tue Jul 18 12:47:58 CEST 2023
/*******************************************************************************
 * Copyright (C) 2023 NTT DATA, All Rights Reserved
 *******************************************************************************/
package com.nttdata.core.common.model;

import java.util.Collection;

/**
 * Common data of the current logged user
 * 
 * @author NTT DATA
 * @since 0.0.1
 */
public class CoreUser extends Core<Long> {
	/**
	 * serialVersionUID
	 */
	private static final long serialVersionUID = -2203985822524424051L;
	/**
	 * The username.
	 */
	private String username;
	/**
	 * The name.
	 */
	private String name;
	/**
	 * The user email.
	 */
	private String email;
	/**
	 * The user profile id.
	 */
	private Long profileId;
	/**
	 * The user authorities.
	 */
	private Collection<String> authorities;

	/**
	 * The username.
	 * @return {@link String} the username
	 */
	@java.lang.SuppressWarnings("all")
	public String getUsername() {
		return this.username;
	}

	/**
	 * The name.
	 * @return {@link String} the name
	 */
	@java.lang.SuppressWarnings("all")
	public String getName() {
		return this.name;
	}

	/**
	 * The user email.
	 * @return {@link String} the email
	 */
	@java.lang.SuppressWarnings("all")
	public String getEmail() {
		return this.email;
	}

	/**
	 * The user profile id.
	 * @return {@link Long} the profileId
	 */
	@java.lang.SuppressWarnings("all")
	public Long getProfileId() {
		return this.profileId;
	}

	/**
	 * The user authorities.
	 * @return {@link Collection} the authorities
	 */
	@java.lang.SuppressWarnings("all")
	public Collection<String> getAuthorities() {
		return this.authorities;
	}

	/**
	 * The username.
	 * @param username {@link String} The username
	 */
	@java.lang.SuppressWarnings("all")
	public void setUsername(final String username) {
		this.username = username;
	}

	/**
	 * The name.
	 * @param name {@link String} The name
	 */
	@java.lang.SuppressWarnings("all")
	public void setName(final String name) {
		this.name = name;
	}

	/**
	 * The user email.
	 * @param email {@link String} The email
	 */
	@java.lang.SuppressWarnings("all")
	public void setEmail(final String email) {
		this.email = email;
	}

	/**
	 * The user profile id.
	 * @param profileId {@link Long} The profileId
	 */
	@java.lang.SuppressWarnings("all")
	public void setProfileId(final Long profileId) {
		this.profileId = profileId;
	}

	/**
	 * The user authorities.
	 * @param authorities {@link Collection} The authorities
	 */
	@java.lang.SuppressWarnings("all")
	public void setAuthorities(final Collection<String> authorities) {
		this.authorities = authorities;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof CoreUser)) return false;
		final CoreUser other = (CoreUser) o;
		if (!other.canEqual((java.lang.Object) this)) return false;
		if (!super.equals(o)) return false;
		final java.lang.Object this$profileId = this.getProfileId();
		final java.lang.Object other$profileId = other.getProfileId();
		if (this$profileId == null ? other$profileId != null : !this$profileId.equals(other$profileId)) return false;
		final java.lang.Object this$username = this.getUsername();
		final java.lang.Object other$username = other.getUsername();
		if (this$username == null ? other$username != null : !this$username.equals(other$username)) return false;
		final java.lang.Object this$name = this.getName();
		final java.lang.Object other$name = other.getName();
		if (this$name == null ? other$name != null : !this$name.equals(other$name)) return false;
		final java.lang.Object this$email = this.getEmail();
		final java.lang.Object other$email = other.getEmail();
		if (this$email == null ? other$email != null : !this$email.equals(other$email)) return false;
		final java.lang.Object this$authorities = this.getAuthorities();
		final java.lang.Object other$authorities = other.getAuthorities();
		if (this$authorities == null ? other$authorities != null : !this$authorities.equals(other$authorities)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof CoreUser;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 59;
		int result = super.hashCode();
		final java.lang.Object $profileId = this.getProfileId();
		result = result * PRIME + ($profileId == null ? 43 : $profileId.hashCode());
		final java.lang.Object $username = this.getUsername();
		result = result * PRIME + ($username == null ? 43 : $username.hashCode());
		final java.lang.Object $name = this.getName();
		result = result * PRIME + ($name == null ? 43 : $name.hashCode());
		final java.lang.Object $email = this.getEmail();
		result = result * PRIME + ($email == null ? 43 : $email.hashCode());
		final java.lang.Object $authorities = this.getAuthorities();
		result = result * PRIME + ($authorities == null ? 43 : $authorities.hashCode());
		return result;
	}

	@java.lang.SuppressWarnings("all")
	public CoreUser() {
	}
}
