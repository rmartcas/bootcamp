// Generated by delombok at Tue Jul 18 12:47:58 CEST 2023
/*******************************************************************************
 * Copyright (C) 2023 NTT DATA, All Rights Reserved
 *******************************************************************************/
package com.nttdata.core.mappings.model;

import java.util.List;
import com.nttdata.core.common.model.Core;
import com.nttdata.core.authorities.model.Authority;

/**
 * Mapping entity
 * 
 * @author NTT DATA
 * @since 0.0.1
 */
public class Mapping extends Core<Long> {
	/**
	 * serialVersionUID
	 */
	private static final long serialVersionUID = 1L;
	/**
	 * The mapping url pattern.
	 */
	private String pattern;
	/**
	 * The mapping position order to evaluate.
	 */
	private Byte position;
	/**
	 * The associated authorities which can access this mapping.
	 */
	private List<Authority> authorities;

	/**
	 * The mapping url pattern.
	 * @return {@link String} the pattern
	 */
	@java.lang.SuppressWarnings("all")
	public String getPattern() {
		return this.pattern;
	}

	/**
	 * The mapping position order to evaluate.
	 * @return {@link Byte} the position
	 */
	@java.lang.SuppressWarnings("all")
	public Byte getPosition() {
		return this.position;
	}

	/**
	 * The associated authorities which can access this mapping.
	 * @return {@link List} the authorities
	 */
	@java.lang.SuppressWarnings("all")
	public List<Authority> getAuthorities() {
		return this.authorities;
	}

	/**
	 * The mapping url pattern.
	 * @param pattern {@link String} The pattern
	 */
	@java.lang.SuppressWarnings("all")
	public void setPattern(final String pattern) {
		this.pattern = pattern;
	}

	/**
	 * The mapping position order to evaluate.
	 * @param position {@link Byte} The position
	 */
	@java.lang.SuppressWarnings("all")
	public void setPosition(final Byte position) {
		this.position = position;
	}

	/**
	 * The associated authorities which can access this mapping.
	 * @param authorities {@link List} The authorities
	 */
	@java.lang.SuppressWarnings("all")
	public void setAuthorities(final List<Authority> authorities) {
		this.authorities = authorities;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof Mapping)) return false;
		final Mapping other = (Mapping) o;
		if (!other.canEqual((java.lang.Object) this)) return false;
		if (!super.equals(o)) return false;
		final java.lang.Object this$position = this.getPosition();
		final java.lang.Object other$position = other.getPosition();
		if (this$position == null ? other$position != null : !this$position.equals(other$position)) return false;
		final java.lang.Object this$pattern = this.getPattern();
		final java.lang.Object other$pattern = other.getPattern();
		if (this$pattern == null ? other$pattern != null : !this$pattern.equals(other$pattern)) return false;
		final java.lang.Object this$authorities = this.getAuthorities();
		final java.lang.Object other$authorities = other.getAuthorities();
		if (this$authorities == null ? other$authorities != null : !this$authorities.equals(other$authorities)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof Mapping;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 59;
		int result = super.hashCode();
		final java.lang.Object $position = this.getPosition();
		result = result * PRIME + ($position == null ? 43 : $position.hashCode());
		final java.lang.Object $pattern = this.getPattern();
		result = result * PRIME + ($pattern == null ? 43 : $pattern.hashCode());
		final java.lang.Object $authorities = this.getAuthorities();
		result = result * PRIME + ($authorities == null ? 43 : $authorities.hashCode());
		return result;
	}

	@java.lang.SuppressWarnings("all")
	public Mapping() {
	}
}
