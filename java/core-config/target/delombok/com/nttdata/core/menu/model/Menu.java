// Generated by delombok at Tue Jul 18 12:47:58 CEST 2023
/*******************************************************************************
 * Copyright (C) 2023 NTT DATA, All Rights Reserved
 *******************************************************************************/
package com.nttdata.core.menu.model;

import java.util.List;
import com.nttdata.core.common.model.Core;
import com.nttdata.core.authorities.model.Authority;

/**
 * Menu entity
 * 
 * @author NTT DATA
 * @since 0.0.1
 */
public class Menu extends Core<Long> {
	/**
	 * serialVersionUID
	 */
	private static final long serialVersionUID = 1L;
	/**
	 * The menu title. Should be a i18n key.
	 */
	private String title;
	/**
	 * The path where menu should navigate.
	 */
	private String link;
	/**
	 * The icon of this menu. Optional.
	 */
	private String icon;
	/**
	 * The position of this menu. Optional.
	 */
	private Byte position;
	/**
	 * List of authorities witch can access this menu. If list is empty no one can access this menu.
	 */
	private List<String> roles;
	/**
	 * List of authorities witch can access this menu. If list is empty no one can access this menu.
	 */
	private List<Authority> authorities;
	/**
	 * Is this menu enabled to navigate?.
	 */
	private boolean enabled;
	/**
	 * The parent menu reference if any.
	 */
	private Menu parent;
	/**
	 * List of menus that depends on this.
	 */
	private List<Menu> children;

	/**
	 * The menu title. Should be a i18n key.
	 * @return {@link String} the title
	 */
	@java.lang.SuppressWarnings("all")
	public String getTitle() {
		return this.title;
	}

	/**
	 * The path where menu should navigate.
	 * @return {@link String} the link
	 */
	@java.lang.SuppressWarnings("all")
	public String getLink() {
		return this.link;
	}

	/**
	 * The icon of this menu. Optional.
	 * @return {@link String} the icon
	 */
	@java.lang.SuppressWarnings("all")
	public String getIcon() {
		return this.icon;
	}

	/**
	 * The position of this menu. Optional.
	 * @return {@link Byte} the position
	 */
	@java.lang.SuppressWarnings("all")
	public Byte getPosition() {
		return this.position;
	}

	/**
	 * List of authorities witch can access this menu. If list is empty no one can access this menu.
	 * @return {@link List} the roles
	 */
	@java.lang.SuppressWarnings("all")
	public List<String> getRoles() {
		return this.roles;
	}

	/**
	 * List of authorities witch can access this menu. If list is empty no one can access this menu.
	 * @return {@link List} the authorities
	 */
	@java.lang.SuppressWarnings("all")
	public List<Authority> getAuthorities() {
		return this.authorities;
	}

	/**
	 * Is this menu enabled to navigate?.
	 * @return {@link Boolean} the enabled
	 */
	@java.lang.SuppressWarnings("all")
	public boolean isEnabled() {
		return this.enabled;
	}

	/**
	 * The parent menu reference if any.
	 * @return {@link Menu} the parent
	 */
	@java.lang.SuppressWarnings("all")
	public Menu getParent() {
		return this.parent;
	}

	/**
	 * List of menus that depends on this.
	 * @return {@link List} the children
	 */
	@java.lang.SuppressWarnings("all")
	public List<Menu> getChildren() {
		return this.children;
	}

	/**
	 * The menu title. Should be a i18n key.
	 * @param title {@link String} The title
	 */
	@java.lang.SuppressWarnings("all")
	public void setTitle(final String title) {
		this.title = title;
	}

	/**
	 * The path where menu should navigate.
	 * @param link {@link String} The link
	 */
	@java.lang.SuppressWarnings("all")
	public void setLink(final String link) {
		this.link = link;
	}

	/**
	 * The icon of this menu. Optional.
	 * @param icon {@link String} The icon
	 */
	@java.lang.SuppressWarnings("all")
	public void setIcon(final String icon) {
		this.icon = icon;
	}

	/**
	 * The position of this menu. Optional.
	 * @param position {@link Byte} The position
	 */
	@java.lang.SuppressWarnings("all")
	public void setPosition(final Byte position) {
		this.position = position;
	}

	/**
	 * List of authorities witch can access this menu. If list is empty no one can access this menu.
	 * @param roles {@link List} The roles
	 */
	@java.lang.SuppressWarnings("all")
	public void setRoles(final List<String> roles) {
		this.roles = roles;
	}

	/**
	 * List of authorities witch can access this menu. If list is empty no one can access this menu.
	 * @param authorities {@link List} The authorities
	 */
	@java.lang.SuppressWarnings("all")
	public void setAuthorities(final List<Authority> authorities) {
		this.authorities = authorities;
	}

	/**
	 * Is this menu enabled to navigate?.
	 * @param enabled {@link Boolean} The enabled
	 */
	@java.lang.SuppressWarnings("all")
	public void setEnabled(final boolean enabled) {
		this.enabled = enabled;
	}

	/**
	 * The parent menu reference if any.
	 * @param parent {@link Menu} The parent
	 */
	@java.lang.SuppressWarnings("all")
	public void setParent(final Menu parent) {
		this.parent = parent;
	}

	/**
	 * List of menus that depends on this.
	 * @param children {@link List} The children
	 */
	@java.lang.SuppressWarnings("all")
	public void setChildren(final List<Menu> children) {
		this.children = children;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof Menu)) return false;
		final Menu other = (Menu) o;
		if (!other.canEqual((java.lang.Object) this)) return false;
		if (!super.equals(o)) return false;
		if (this.isEnabled() != other.isEnabled()) return false;
		final java.lang.Object this$position = this.getPosition();
		final java.lang.Object other$position = other.getPosition();
		if (this$position == null ? other$position != null : !this$position.equals(other$position)) return false;
		final java.lang.Object this$title = this.getTitle();
		final java.lang.Object other$title = other.getTitle();
		if (this$title == null ? other$title != null : !this$title.equals(other$title)) return false;
		final java.lang.Object this$link = this.getLink();
		final java.lang.Object other$link = other.getLink();
		if (this$link == null ? other$link != null : !this$link.equals(other$link)) return false;
		final java.lang.Object this$icon = this.getIcon();
		final java.lang.Object other$icon = other.getIcon();
		if (this$icon == null ? other$icon != null : !this$icon.equals(other$icon)) return false;
		final java.lang.Object this$roles = this.getRoles();
		final java.lang.Object other$roles = other.getRoles();
		if (this$roles == null ? other$roles != null : !this$roles.equals(other$roles)) return false;
		final java.lang.Object this$authorities = this.getAuthorities();
		final java.lang.Object other$authorities = other.getAuthorities();
		if (this$authorities == null ? other$authorities != null : !this$authorities.equals(other$authorities)) return false;
		final java.lang.Object this$parent = this.getParent();
		final java.lang.Object other$parent = other.getParent();
		if (this$parent == null ? other$parent != null : !this$parent.equals(other$parent)) return false;
		final java.lang.Object this$children = this.getChildren();
		final java.lang.Object other$children = other.getChildren();
		if (this$children == null ? other$children != null : !this$children.equals(other$children)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof Menu;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 59;
		int result = super.hashCode();
		result = result * PRIME + (this.isEnabled() ? 79 : 97);
		final java.lang.Object $position = this.getPosition();
		result = result * PRIME + ($position == null ? 43 : $position.hashCode());
		final java.lang.Object $title = this.getTitle();
		result = result * PRIME + ($title == null ? 43 : $title.hashCode());
		final java.lang.Object $link = this.getLink();
		result = result * PRIME + ($link == null ? 43 : $link.hashCode());
		final java.lang.Object $icon = this.getIcon();
		result = result * PRIME + ($icon == null ? 43 : $icon.hashCode());
		final java.lang.Object $roles = this.getRoles();
		result = result * PRIME + ($roles == null ? 43 : $roles.hashCode());
		final java.lang.Object $authorities = this.getAuthorities();
		result = result * PRIME + ($authorities == null ? 43 : $authorities.hashCode());
		final java.lang.Object $parent = this.getParent();
		result = result * PRIME + ($parent == null ? 43 : $parent.hashCode());
		final java.lang.Object $children = this.getChildren();
		result = result * PRIME + ($children == null ? 43 : $children.hashCode());
		return result;
	}

	@java.lang.SuppressWarnings("all")
	public Menu() {
	}
}
